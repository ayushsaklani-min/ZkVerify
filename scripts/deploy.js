const hre = require("hardhat");
const fs = require("fs");
const path = require("path");

async function main() {
  console.log("🚀 Starting deployment to Moca Chain Testnet...");
  
  // Get the contract factory
  const ProofVerifier = await hre.ethers.getContractFactory("ProofVerifier");
  
  // Deploy the contract
  console.log("📦 Deploying ProofVerifier contract...");
  const contract = await ProofVerifier.deploy();
  await contract.waitForDeployment();
  
  const address = await contract.getAddress();
  console.log("✅ ProofVerifier deployed at:", address);
  
  // Get deployment info
  const [deployer] = await hre.ethers.getSigners();
  console.log("👤 Deployer address:", deployer.address);
  console.log("💰 Deployer balance:", hre.ethers.formatEther(await hre.ethers.provider.getBalance(deployer.address)), "ETH");
  
  // Read ABI from artifacts
  const artifactPath = path.join(__dirname, "..", "artifacts", "contracts", "ProofVerifier.sol", "ProofVerifier.json");
  const artifact = JSON.parse(fs.readFileSync(artifactPath, "utf8"));
  const abi = artifact.abi;

  // Ensure frontend directories
  const frontendAbiPath = path.join(__dirname, "..", "frontend", "src", "abi", "ProofVerifier.json");
  const frontendConfigPath = path.join(__dirname, "..", "frontend", "src", "config.js");
  const frontendAbiDir = path.dirname(frontendAbiPath);
  const frontendConfigDir = path.dirname(frontendConfigPath);

  if (!fs.existsSync(frontendAbiDir)) fs.mkdirSync(frontendAbiDir, { recursive: true });
  if (!fs.existsSync(frontendConfigDir)) fs.mkdirSync(frontendConfigDir, { recursive: true });

  // Write ABI JSON for frontend consumers
  fs.writeFileSync(frontendAbiPath, JSON.stringify(abi, null, 2));

  // Create config for frontend (includes ABI export for convenience)
  const configContent = `// Auto-generated by deployment script
export const CONTRACT_ADDRESS = "${address}";
export const CHAIN_ID = 5151;
export const RPC_URL = "https://testnet-rpc.mechain.tech";
export const EXPLORER_URL = "https://testnet-scan.mocachain.org";
export const DEPLOYER_ADDRESS = "${deployer.address}";
export const DEPLOYMENT_TIMESTAMP = ${Date.now()};
export { default as ABI } from '@/abi/ProofVerifier.json';
`;
  
  // Write config file
  fs.writeFileSync(frontendConfigPath, configContent);
  console.log("📝 Frontend config updated:", frontendConfigPath);
  console.log("📝 Frontend ABI updated:", frontendAbiPath);
  
  // Create deployment info file
  const deploymentInfo = {
    contractAddress: address,
    deployerAddress: deployer.address,
    chainId: 5151,
    network: "moca-testnet",
    timestamp: new Date().toISOString(),
    blockNumber: await hre.ethers.provider.getBlockNumber(),
    gasUsed: "N/A", // Would need to track during deployment
  };
  
  fs.writeFileSync(
    path.join(__dirname, "..", "deployment-info.json"),
    JSON.stringify(deploymentInfo, null, 2)
  );
  
  console.log("📊 Deployment info saved to deployment-info.json");
  console.log("🔗 Contract on explorer:", `https://testnet-scan.mocachain.org/address/${address}`);
  
  console.log("\n🎉 Deployment completed successfully!");
  console.log("📋 Summary:");
  console.log(`   Contract: ${address}`);
  console.log(`   Deployer: ${deployer.address}`);
  console.log(`   Network: Moca Chain Testnet (5151)`);
}

main()
  .then(() => process.exit(0))
  .catch((error) => {
    console.error("❌ Deployment failed:", error);
    process.exit(1);
  });
